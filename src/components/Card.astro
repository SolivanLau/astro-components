---
import type { HTMLAttributes } from "astro/types";
type Props = HTMLAttributes<"div">;

const { class: className } = Astro.props;
---

<div class:list={["card", className]}>
	<!-- img -->
	{
		Astro.slots.has("img") && (
			<div class="card__img">
				<slot name="img" />
			</div>
		)
	}

	<!-- content -->
	<div class="card__content flow">
		<!-- optional badge -->
		{
			Astro.slots.has("badge") && (
				<div class="card__badge">
					<slot name="badge" />
				</div>
			)
		}
		<!-- optional title -->
		{
			Astro.slots.has("title") && (
				<div class="card__title">
					<slot name="title" />
				</div>
			)
		}
		<!-- all content -->
		{
			Astro.slots.has("default") && (
				<div class="card__text">
					<slot />
				</div>
			)
		}

		<!-- Author -->
		{
			Astro.slots.has("author") && (
				<div class="card__author">
					<slot name="author" />
				</div>
			)
		}
	</div>
</div>

<style is:global lang="scss">
	.card {
		border-radius: var(--bdr-radius);
		background-color: var(--clr-white);
		display: grid;
		grid-template-rows: auto 1fr;
		box-shadow: var(--clr-shadow);
	}

	.card__img {
		position: relative;
		// slotted img
		img {
			width: 100%;
			aspect-ratio: 3/2;
			object-fit: cover;
			border-radius: var(--bdr-radius) var(--bdr-radius) 0 0;
		}

		// gradient overlay
		&::before {
			content: " ";
			position: absolute;
			inset: 0;
			width: 100%;
			height: 100%;
			background: var(--clr-grad-primary);
			border-radius: var(--bdr-radius) var(--bdr-radius) 0 0;
		}
	}

	.card__content {
		--_padding: 2rem;
		padding: var(--_padding);
		color: var(--clr-text-dark);
		display: grid;
		grid-template-rows: auto auto 1fr auto;
		grid-row: 2;
	}

	.card__content > * {
		grid-row: span 1;
	}

	// subgrid items
	.card__badge {
	}
	.card__title {
		--_flow-spacer: 0.5rem;
	}

	.card__title > * {
		font-size: var(--fs-500);
	}

	.card__text {
	}
	.card__author {
	}
</style>
